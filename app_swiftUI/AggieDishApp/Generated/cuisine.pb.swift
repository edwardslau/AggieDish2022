// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: protos/model/cuisine.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Model_Cuisine: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case american // = 0
  case mexican // = 1
  case thai // = 2
  case japanese // = 3
  case chinese // = 4
  case vietnamese // = 5
  case indian // = 6
  case desserts // = 7
  case UNRECOGNIZED(Int)

  init() {
    self = .american
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .american
    case 1: self = .mexican
    case 2: self = .thai
    case 3: self = .japanese
    case 4: self = .chinese
    case 5: self = .vietnamese
    case 6: self = .indian
    case 7: self = .desserts
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .american: return 0
    case .mexican: return 1
    case .thai: return 2
    case .japanese: return 3
    case .chinese: return 4
    case .vietnamese: return 5
    case .indian: return 6
    case .desserts: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Model_Cuisine: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Model_Cuisine] = [
    .american,
    .mexican,
    .thai,
    .japanese,
    .chinese,
    .vietnamese,
    .indian,
    .desserts,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Model_Cuisine: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "AMERICAN"),
    1: .same(proto: "MEXICAN"),
    2: .same(proto: "THAI"),
    3: .same(proto: "JAPANESE"),
    4: .same(proto: "CHINESE"),
    5: .same(proto: "VIETNAMESE"),
    6: .same(proto: "INDIAN"),
    7: .same(proto: "DESSERTS"),
  ]
}
