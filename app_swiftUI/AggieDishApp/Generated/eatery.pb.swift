// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: protos/model/eatery.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Model_Eatery {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var id: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._id ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  mutating func clearID() {_uniqueStorage()._id = nil}

  /// The name of the eatery, e.g., "Segundo Dining Commons."
  var name: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._name ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  mutating func clearName() {_uniqueStorage()._name = nil}

  /// The category associated with the eatery.
  var category: [Model_Category] {
    get {return _storage._category}
    set {_uniqueStorage()._category = newValue}
  }

  /// The latitude and longitude that describe the eatery's location.
  var coordinates: Google_Type_LatLng {
    get {return _storage._coordinates ?? Google_Type_LatLng()}
    set {_uniqueStorage()._coordinates = newValue}
  }
  /// Returns true if `coordinates` has been explicitly set.
  var hasCoordinates: Bool {return _storage._coordinates != nil}
  /// Clears the value of `coordinates`. Subsequent reads from it will return its default value.
  mutating func clearCoordinates() {_uniqueStorage()._coordinates = nil}

  /// A short, user-facing representation of the eatery's location, e.g.,
  /// "Segundo." The precision of the location can vary for each eatery.
  var location: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._location ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._location = newValue}
  }
  /// Returns true if `location` has been explicitly set.
  var hasLocation: Bool {return _storage._location != nil}
  /// Clears the value of `location`. Subsequent reads from it will return its default value.
  mutating func clearLocation() {_uniqueStorage()._location = nil}

  /// Address of the eatery, e.g., "232 Shields Ave, Davis, CA 95616."
  var address: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._address ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._address = newValue}
  }
  /// Returns true if `address` has been explicitly set.
  var hasAddress: Bool {return _storage._address != nil}
  /// Clears the value of `address`. Subsequent reads from it will return its default value.
  mutating func clearAddress() {_uniqueStorage()._address = nil}

  /// The eatery's payment information.
  var paymentInfo: Model_PaymentInfo {
    get {return _storage._paymentInfo ?? Model_PaymentInfo()}
    set {_uniqueStorage()._paymentInfo = newValue}
  }
  /// Returns true if `paymentInfo` has been explicitly set.
  var hasPaymentInfo: Bool {return _storage._paymentInfo != nil}
  /// Clears the value of `paymentInfo`. Subsequent reads from it will return its default value.
  mutating func clearPaymentInfo() {_uniqueStorage()._paymentInfo = nil}

  /// The eatery's rating information.
  var rating: Model_RatingInfo {
    get {return _storage._rating ?? Model_RatingInfo()}
    set {_uniqueStorage()._rating = newValue}
  }
  /// Returns true if `rating` has been explicitly set.
  var hasRating: Bool {return _storage._rating != nil}
  /// Clears the value of `rating`. Subsequent reads from it will return its default value.
  mutating func clearRating() {_uniqueStorage()._rating = nil}

  /// The eatery's contact information.
  var contactInfo: Model_ContactInfo {
    get {return _storage._contactInfo ?? Model_ContactInfo()}
    set {_uniqueStorage()._contactInfo = newValue}
  }
  /// Returns true if `contactInfo` has been explicitly set.
  var hasContactInfo: Bool {return _storage._contactInfo != nil}
  /// Clears the value of `contactInfo`. Subsequent reads from it will return its default value.
  mutating func clearContactInfo() {_uniqueStorage()._contactInfo = nil}

  /// The URL that locates a hero image for the eatery.
  /// TODO(#80): Change type to one that indicates a URL.
  var imageURL: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._imageURL ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._imageURL = newValue}
  }
  /// Returns true if `imageURL` has been explicitly set.
  var hasImageURL: Bool {return _storage._imageURL != nil}
  /// Clears the value of `imageURL`. Subsequent reads from it will return its default value.
  mutating func clearImageURL() {_uniqueStorage()._imageURL = nil}

  /// 1 through 3 dollar signs ($, $$, $$$).
  var priceLevel: SwiftProtobuf.Google_Protobuf_Int32Value {
    get {return _storage._priceLevel ?? SwiftProtobuf.Google_Protobuf_Int32Value()}
    set {_uniqueStorage()._priceLevel = newValue}
  }
  /// Returns true if `priceLevel` has been explicitly set.
  var hasPriceLevel: Bool {return _storage._priceLevel != nil}
  /// Clears the value of `priceLevel`. Subsequent reads from it will return its default value.
  mutating func clearPriceLevel() {_uniqueStorage()._priceLevel = nil}

  /// The eatery's open days. Each entry represents a day of the week.
  var dayOpen: [Model_DayOpen] {
    get {return _storage._dayOpen}
    set {_uniqueStorage()._dayOpen = newValue}
  }

  /// The eatery's menu.
  var menu: Model_Menu {
    get {return _storage._menu ?? Model_Menu()}
    set {_uniqueStorage()._menu = newValue}
  }
  /// Returns true if `menu` has been explicitly set.
  var hasMenu: Bool {return _storage._menu != nil}
  /// Clears the value of `menu`. Subsequent reads from it will return its default value.
  mutating func clearMenu() {_uniqueStorage()._menu = nil}

  /// The description of the eatery.
  var description_p: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._description_p ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return _storage._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {_uniqueStorage()._description_p = nil}

  /// A short, user-facing representation of the eatery's pick up location, 
  /// e.g., "First Floor." The precision of the location can vary for each eatery.
  var pickupLocation: SwiftProtobuf.Google_Protobuf_StringValue {
    get {return _storage._pickupLocation ?? SwiftProtobuf.Google_Protobuf_StringValue()}
    set {_uniqueStorage()._pickupLocation = newValue}
  }
  /// Returns true if `pickupLocation` has been explicitly set.
  var hasPickupLocation: Bool {return _storage._pickupLocation != nil}
  /// Clears the value of `pickupLocation`. Subsequent reads from it will return its default value.
  mutating func clearPickupLocation() {_uniqueStorage()._pickupLocation = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "model"

extension Model_Eatery: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".Eatery"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "name"),
    3: .same(proto: "category"),
    4: .same(proto: "coordinates"),
    5: .same(proto: "location"),
    6: .same(proto: "address"),
    7: .standard(proto: "payment_info"),
    8: .same(proto: "rating"),
    9: .standard(proto: "contact_info"),
    10: .standard(proto: "image_url"),
    11: .standard(proto: "price_level"),
    12: .standard(proto: "day_open"),
    13: .same(proto: "menu"),
    14: .same(proto: "description"),
    16: .standard(proto: "pickup_location"),
  ]

  fileprivate class _StorageClass {
    var _id: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _name: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _category: [Model_Category] = []
    var _coordinates: Google_Type_LatLng? = nil
    var _location: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _address: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _paymentInfo: Model_PaymentInfo? = nil
    var _rating: Model_RatingInfo? = nil
    var _contactInfo: Model_ContactInfo? = nil
    var _imageURL: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _priceLevel: SwiftProtobuf.Google_Protobuf_Int32Value? = nil
    var _dayOpen: [Model_DayOpen] = []
    var _menu: Model_Menu? = nil
    var _description_p: SwiftProtobuf.Google_Protobuf_StringValue? = nil
    var _pickupLocation: SwiftProtobuf.Google_Protobuf_StringValue? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _name = source._name
      _category = source._category
      _coordinates = source._coordinates
      _location = source._location
      _address = source._address
      _paymentInfo = source._paymentInfo
      _rating = source._rating
      _contactInfo = source._contactInfo
      _imageURL = source._imageURL
      _priceLevel = source._priceLevel
      _dayOpen = source._dayOpen
      _menu = source._menu
      _description_p = source._description_p
      _pickupLocation = source._pickupLocation
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._id) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._name) }()
        case 3: try { try decoder.decodeRepeatedEnumField(value: &_storage._category) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._coordinates) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._location) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._address) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._paymentInfo) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._rating) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._contactInfo) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._imageURL) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._priceLevel) }()
        case 12: try { try decoder.decodeRepeatedMessageField(value: &_storage._dayOpen) }()
        case 13: try { try decoder.decodeSingularMessageField(value: &_storage._menu) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._description_p) }()
        case 16: try { try decoder.decodeSingularMessageField(value: &_storage._pickupLocation) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._id {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      } }()
      try { if let v = _storage._name {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      if !_storage._category.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._category, fieldNumber: 3)
      }
      try { if let v = _storage._coordinates {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._location {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._address {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._paymentInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._rating {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._contactInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._imageURL {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._priceLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
      if !_storage._dayOpen.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._dayOpen, fieldNumber: 12)
      }
      try { if let v = _storage._menu {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      } }()
      try { if let v = _storage._description_p {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      } }()
      try { if let v = _storage._pickupLocation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Model_Eatery, rhs: Model_Eatery) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._name != rhs_storage._name {return false}
        if _storage._category != rhs_storage._category {return false}
        if _storage._coordinates != rhs_storage._coordinates {return false}
        if _storage._location != rhs_storage._location {return false}
        if _storage._address != rhs_storage._address {return false}
        if _storage._paymentInfo != rhs_storage._paymentInfo {return false}
        if _storage._rating != rhs_storage._rating {return false}
        if _storage._contactInfo != rhs_storage._contactInfo {return false}
        if _storage._imageURL != rhs_storage._imageURL {return false}
        if _storage._priceLevel != rhs_storage._priceLevel {return false}
        if _storage._dayOpen != rhs_storage._dayOpen {return false}
        if _storage._menu != rhs_storage._menu {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._pickupLocation != rhs_storage._pickupLocation {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
